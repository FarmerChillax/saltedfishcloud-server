<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>saltedfishcloud</artifactId>
        <groupId>com.xiaotao</groupId>
        <version>1.9.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sfc-core</artifactId>

    <dependencies>
<!--        <dependency>-->
<!--            <groupId>com.xiaotao</groupId>-->
<!--            <artifactId>sfc-ext-hadoop-store</artifactId>-->
<!--            <version>1.0.0-RELEASE</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>com.xiaotao</groupId>
            <artifactId>sfc-api</artifactId>
            <version>1.2.2</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-devtools</artifactId>-->
<!--            <scope>runtime</scope>-->
<!--            <optional>true</optional>-->
<!--        </dependency>-->


        <!-- SpringBoot Druid数据源 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.22</version>
        </dependency>



        <!--  Mybatis      -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.4</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--   FTP服务     -->
        <dependency>
            <groupId>org.apache.ftpserver</groupId>
            <artifactId>ftpserver-core</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.xiaotao</groupId>
            <artifactId>sfc-compress</artifactId>
            <version>1.9.0.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oopsguy.kaptcha</groupId>
            <artifactId>kaptcha</artifactId>
            <version>1.0.0-beta-2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <excludes>
                        <exclude>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>clean-release</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete dir="${project.basedir}/../release"/>
                                <mkdir dir="${project.basedir}/../release"/>
                            </target>
                        </configuration>
                    </execution>
                    <!--    打包前复制前端项目编译结果    -->
                    <execution>
                        <id>copy-frontend</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="sfc.front-end-path">
                                <echo message="复制前端项目: ${sfc.front-end-path}" />
                                <!-- 复制到源码  -->
                                <copy overwrite="true" todir="${project.basedir}/src/main/resources/webapp">
                                    <fileset dir="${sfc.front-end-path}/dist" includes="**"/>
                                </copy>
                                <!-- 复制到输出目录-->
                                <copy overwrite="true" todir="${project.basedir}/target/classes/webapp">
                                    <fileset dir="${sfc.front-end-path}/dist" includes="**"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                    <!--    创建release资源    -->
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${basedir}/../release/ext" />
                                <mkdir dir="${basedir}/../release/ext-available" />
                                <copy overwrite="true" todir="${basedir}/../release">
                                    <fileset dir="${basedir}/../pre-release" includes="**"/>
                                </copy>
                                <copy
                                        overwrite="true"
                                        tofile="${basedir}/../release/sfc-core.jar"
                                        file="${project.build.directory}/${project.artifactId}-${project.version}.jar"
                                />
                                <copy
                                        overwrite="true"
                                        tofile="${basedir}/../release/README.md"
                                        file="${basedir}/../README.md"
                                />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
